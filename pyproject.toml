[project]
name = "agno-agent"
version = "0.1.0"
description = "A series of AI agents built using Agno framework"
requires-python = ">=3.12"
dependencies = [
    "agno>=1.7.0",
    "black>=24.0.0",
    "chromadb>=0.4.0",
    "click>=8.0.0",
    "duckduckgo-search>=8.0.4",
    "exa-py>=1.14.13",
    "fastapi[standard]>=0.115.14",
    "isort>=5.13.2",
    "lancedb>=0.24.0",
    "openai>=1.93.0",
    "pandas>=2.3.0",
    "pathlib>=1.0.1",
    "pikepdf>=8.0.0",
    "pylance>=0.30.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=6.0.0",
    "sqlalchemy>=2.0.41",
    "sqlmodel>=0.0.16",
    "tantivy>=0.24.0",
    "tenacity>=8.0.0",
    "uvicorn>=0.24.0",
    "yfinance>=0.2.64",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["agent*"]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | \.history
  | tmp
)/
'''

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.isort]
profile = "black"
skip_glob = [
    ".venv/*",
    ".history/*",
    "data/*",
    "tmp/*",
    "*.egg-info/*"
]
known_first_party = ["agent", "playground"]
known_third_party = ["agno", "fastapi", "openai", "duckduckgo_search", "exa_py", "lancedb", "pandas", "yfinance"]
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
